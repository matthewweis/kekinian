name: Distro

on:
  push:
  workflow_dispatch:

jobs:

  ci-distro-linux-amd64:
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, '[distro]') || github.ref_type == 'tag' || github.event_name == 'workflow_dispatch'"
    steps:
      - name: Clean
        run: |
          rm -fR "$GITHUB_WORKSPACE/Sireum"
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: Sireum
      - name: Update dev tag
        run: |
          cd "$GITHUB_WORKSPACE/Sireum"
          git push --force origin HEAD:refs/tags/dev
          git fetch --tags
      - name: Build Jar & m2
        run: |
          cd "$GITHUB_WORKSPACE/Sireum"
          git submodule update --init --recursive
          cd "$GITHUB_WORKSPACE"
          export SIREUM_HOME="$GITHUB_WORKSPACE/Sireum"
          "$SIREUM_HOME/bin/build.cmd"
          cp "$SIREUM_HOME/bin/sireum.jar" sireum.jar
          rm -fR "$GITHUB_WORKSPACE/.m2" $HOME/.m2
          "$SIREUM_HOME/bin/build.cmd" m2-lib
          mv $HOME/.m2 "$GITHUB_WORKSPACE/.m2"
          zip -r org.sireum.library.m2.zip .m2
          rm -fR "$GITHUB_WORKSPACE/.m2" $HOME/.m2
          "$SIREUM_HOME/bin/build.cmd" m2
          mv $HOME/.m2 "$GITHUB_WORKSPACE/.m2"
          zip -r org.sireum.m2.zip .m2
      - name: Upload Jar dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum.jar
          asset_name: sireum.jar
          tag: dev
          overwrite: true
      - name: Upload m2 Lib dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: org.sireum.library.m2.zip
          asset_name: org.sireum.library.m2.zip
          tag: dev
          overwrite: true
      - name: Upload m2 dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: org.sireum.m2.zip
          asset_name: org.sireum.m2.zip
          tag: dev
          overwrite: true
      - name: Upload Jar Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum.jar
          asset_name: sireum.jar
          tag: ${{ github.ref }}
          overwrite: true
      - name: Upload m2 Library Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: org.sireum.library.m2.zip
          asset_name: org.sireum.library.m2.zip
          tag: ${{ github.ref }}
          overwrite: true
      - name: Upload m2 Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: org.sireum.m2.zip
          asset_name: org.sireum.m2.zip
          tag: ${{ github.ref }}
          overwrite: true
      - name: Build
        run: |
          cd "$GITHUB_WORKSPACE"
          export SIREUM_HOME="$GITHUB_WORKSPACE/Sireum"
          timeout 10s "$SIREUM_HOME/bin/build.cmd" jitpack || true
          "$SIREUM_HOME/bin/sireum" setup vscode --extensions "mhutchie.git-graph,ms-python.python,scalameta.metals,rust-lang.rust-analyzer"
          "$SIREUM_HOME/bin/build.cmd" native distro --linux --pack --vscodium
          tar -cJf sireum-cli-linux-amd64.tar.xz Sireum/bin/linux/sireum Sireum/bin/sireum Sireum/bin/install Sireum/license.txt Sireum/readme.md Sireum/versions.properties
          mv "$SIREUM_HOME/distro/linux.tar.xz" sireum-ive-linux-amd64.tar.xz
          mv "$SIREUM_HOME/distro/sireum-codeive-linux-amd64.tar.xz" .
      - name: Upload CLI dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-cli-linux-amd64.tar.xz
          asset_name: sireum-cli-linux-amd64.tar.xz
          tag: dev
          overwrite: true
      - name: Upload IVE dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-ive-linux-amd64.tar.xz
          asset_name: sireum-ive-linux-amd64.tar.xz
          tag: dev
          overwrite: true
      - name: Upload HAMR dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-codeive-linux-amd64.tar.xz
          asset_name: sireum-codeive-linux-amd64.tar.xz
          tag: dev
          overwrite: true
      - name: Upload CLI Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-cli-linux-amd64.tar.xz
          asset_name: sireum-cli-linux-amd64.tar.xz
          tag: ${{ github.ref }}
          overwrite: true
      - name: Upload IVE Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-ive-linux-amd64.tar.xz
          asset_name: sireum-ive-linux-amd64.tar.xz
          tag: ${{ github.ref }}
          overwrite: true
      - name: Upload HAMR Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-codeive-linux-amd64.tar.xz
          asset_name: sireum-codeive-linux-amd64.tar.xz
          tag: ${{ github.ref }}
          overwrite: true

  ci-distro-macos-arm64:
    runs-on: mac-mini-m1
    if: "contains(github.event.head_commit.message, '[distro]') || github.ref_type == 'tag' || github.event_name == 'workflow_dispatch'"
    steps:
      - name: Clean
        run: |
          rm -fR "$GITHUB_WORKSPACE/Sireum"
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: Sireum
          submodules: recursive
      - name: Build
        run: |
          cd $GITHUB_WORKSPACE
          export SIREUM_HOME="$GITHUB_WORKSPACE/Sireum"
          "$SIREUM_HOME/bin/init.sh"
          "$SIREUM_HOME/bin/sireum" setup vscode --extensions "mhutchie.git-graph,ms-python.python,scalameta.metals,rust-lang.rust-analyzer"
          "$SIREUM_HOME/bin/build.cmd" native distro --mac --pack --vscodium
          tar -cJf sireum-cli-mac-arm64.tar.xz Sireum/bin/mac/sireum Sireum/bin/sireum Sireum/bin/install Sireum/license.txt Sireum/readme.md Sireum/versions.properties 
          mv "$SIREUM_HOME/distro/mac.tar.xz" sireum-ive-mac-arm64.tar.xz
          mv "$SIREUM_HOME/distro/sireum-codeive-mac-arm64.tar.xz" .
      - name: Upload CLI dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-cli-mac-arm64.tar.xz
          asset_name: sireum-cli-mac-arm64.tar.xz
          tag: dev
          overwrite: true
      - name: Upload IVE dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-ive-mac-arm64.tar.xz
          asset_name: sireum-ive-mac-arm64.tar.xz
          tag: dev
          overwrite: true
      - name: Upload HAMR dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-codeive-mac-arm64.tar.xz
          asset_name: sireum-codeive-mac-arm64.tar.xz
          tag: dev
          overwrite: true
      - name: Upload CLI Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-cli-mac-arm64.tar.xz
          asset_name: sireum-cli-mac-arm64.tar.xz
          tag: ${{ github.ref }}
          overwrite: true
      - name: Upload IVE Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-ive-mac-arm64.tar.xz
          asset_name: sireum-ive-mac-arm64.tar.xz
          tag: ${{ github.ref }}
          overwrite: true
      - name: Upload HAMR Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-codeive-mac-arm64.tar.xz
          asset_name: sireum-codeive-mac-arm64.tar.xz
          tag: ${{ github.ref }}
          overwrite: true

  ci-distro-macos-amd64:
    runs-on: macOS-13
    if: "contains(github.event.head_commit.message, '[distro]') || github.ref_type == 'tag' || github.event_name == 'workflow_dispatch'"
    steps:
      - name: Clean
        run: |
          rm -fR "$GITHUB_WORKSPACE/Sireum"
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: Sireum
          submodules: recursive
      - name: Build
        run: |
          cd $GITHUB_WORKSPACE
          export SIREUM_HOME="$GITHUB_WORKSPACE/Sireum"
          "$SIREUM_HOME/bin/init.sh"
          "$SIREUM_HOME/bin/sireum" setup vscode --extensions "mhutchie.git-graph,ms-python.python,scalameta.metals,rust-lang.rust-analyzer"
          "$SIREUM_HOME/bin/build.cmd" native distro --mac --pack --vscodium
          tar -cJf sireum-cli-mac-amd64.tar.xz Sireum/bin/mac/sireum Sireum/bin/sireum Sireum/bin/install Sireum/license.txt Sireum/readme.md Sireum/versions.properties
          mv "$SIREUM_HOME/distro/mac.tar.xz" sireum-ive-mac-amd64.tar.xz
          mv "$SIREUM_HOME/distro/sireum-codeive-mac-amd64.tar.xz" .
      - name: Upload CLI dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-cli-mac-amd64.tar.xz
          asset_name: sireum-cli-mac-amd64.tar.xz
          tag: dev
          overwrite: true
      - name: Upload IVE dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-ive-mac-amd64.tar.xz
          asset_name: sireum-ive-mac-amd64.tar.xz
          tag: dev
          overwrite: true
      - name: Upload HAMR dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-codeive-mac-amd64.tar.xz
          asset_name: sireum-codeive-mac-amd64.tar.xz
          tag: dev
          overwrite: true
      - name: Upload CLI Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-cli-mac-amd64.tar.xz
          asset_name: sireum-cli-mac-amd64.tar.xz
          tag: ${{ github.ref }}
          overwrite: true
      - name: Upload IVE Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-ive-mac-amd64.tar.xz
          asset_name: sireum-ive-mac-amd64.tar.xz
          tag: ${{ github.ref }}
          overwrite: true
      - name: Upload HAMR Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-codeive-mac-amd64.tar.xz
          asset_name: sireum-codeive-mac-amd64.tar.xz
          tag: ${{ github.ref }}
          overwrite: true

  ci-distro-windows-amd64:
    runs-on: windows-latest
    if: "contains(github.event.head_commit.message, '[distro]') || github.ref_type == 'tag' || github.event_name == 'workflow_dispatch'"
    steps:
      - name: Enable git config core.longpaths
        run: git config --system core.longpaths true
      - name: Clean
        shell: cmd
        run: |
          if exist "%GITHUB_WORKSPACE%\Sireum" rmdir /s/q "%GITHUB_WORKSPACE%\Sireum"
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: Sireum
          submodules: recursive
      - name: Configure Pagefile
        uses: al-cheb/configure-pagefile-action@v1.4
        with:
          minimum-size: 8GB
          maximum-size: 16GB
          disk-root: "C:"
      - name: Build
        shell: cmd
        run: |
          set SIREUM_HOME=%GITHUB_WORKSPACE%\Sireum
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          call "%SIREUM_HOME%\bin\init.bat"
          call "%SIREUM_HOME%\bin\sireum.bat" setup vscode --extensions "mhutchie.git-graph,ms-python.python,scalameta.metals,rust-lang.rust-analyzer"
          call "%SIREUM_HOME%\bin\build.cmd" native distro --win --pack --vscodium
          copy C:\Windows\System32\vcruntime140.dll Sireum\bin\win\
          copy C:\Windows\System32\vcruntime140_1.dll Sireum\bin\win\
          tar -acf sireum-cli-win-amd64.zip Sireum\bin\win\sireum.exe Sireum\bin\win\vcruntime140.dll Sireum\bin\win\vcruntime140_1.dll Sireum\bin\sireum.bat Sireum\bin\install Sireum\license.txt Sireum\readme.md Sireum\versions.properties
          move "%SIREUM_HOME%\distro\win.zip" "%GITHUB_WORKSPACE%\sireum-ive-win-amd64.zip"
          move "%SIREUM_HOME%\distro\sireum-codeive-win-amd64.zip" "%GITHUB_WORKSPACE%\"
      - name: Upload CLI dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-cli-win-amd64.zip
          asset_name: sireum-cli-win-amd64.zip
          tag: dev
          overwrite: true
      - name: Upload IVE dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-ive-win-amd64.zip
          asset_name: sireum-ive-win-amd64.zip
          tag: dev
          overwrite: true
      - name: Upload HAMR dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-codeive-win-amd64.zip
          asset_name: sireum-codeive-win-amd64.zip
          tag: dev
          overwrite: true
      - name: Upload CLI Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-cli-win-amd64.zip
          asset_name: sireum-cli-win-amd64.zip
          tag: ${{ github.ref }}
          overwrite: true
      - name: Upload IVE Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-ive-win-amd64.zip
          asset_name: sireum-ive-win-amd64.zip
          tag: ${{ github.ref }}
          overwrite: true
      - name: Upload HAMR Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-codeive-win-amd64.zip
          asset_name: sireum-codeive-win-amd64.zip
          tag: ${{ github.ref }}
          overwrite: true

  test-mac-arm64:
    needs: [ci-distro-linux-amd64, ci-distro-macos-arm64]
    env:
      SIREUM_V: ${{ github.ref_type == 'tag' && github.ref || 'dev' }}
    runs-on: macOS-latest
    steps:
      - name: Test
        run: |
          mkdir -p ~/Applications ~/Downloads
          curl -JLso ~/Downloads/sireum-ive-mac-arm64.tar.xz https://github.com/sireum/kekinian/releases/download/$SIREUM_V/sireum-ive-mac-arm64.tar.xz
          curl -JLso ~/Downloads/org.sireum.library.m2.zip https://github.com/sireum/kekinian/releases/download/$SIREUM_V/org.sireum.library.m2.zip  
          cd ~/Applications
          tar xf ~/Downloads/sireum-ive-mac-arm64.tar.xz
          cd ~
          tar xf ~/Downloads/org.sireum.library.m2.zip
          export SIREUM_HOME=~/Applications/Sireum
          git clone https://github.com/sireum/logika-examples
          logika-examples/bin/verify.cmd
          "${SIREUM_HOME}/bin/sireum" proyek ive logika-examples

  test-mac-amd64:
    needs: [ci-distro-linux-amd64, ci-distro-macos-amd64]
    env:
      SIREUM_V: ${{ github.ref_type == 'tag' && github.ref || 'dev' }}
    runs-on: macOS-13
    steps:
      - name: Test
        run: |
          mkdir -p ~/Applications ~/Downloads
          curl -JLso ~/Downloads/sireum-ive-mac-amd64.tar.xz https://github.com/sireum/kekinian/releases/download/$SIREUM_V/sireum-ive-mac-amd64.tar.xz
          curl -JLso ~/Downloads/org.sireum.library.m2.zip https://github.com/sireum/kekinian/releases/download/$SIREUM_V/org.sireum.library.m2.zip  
          cd ~/Applications
          tar xf ~/Downloads/sireum-ive-mac-amd64.tar.xz
          cd ~
          tar xf ~/Downloads/org.sireum.library.m2.zip
          export SIREUM_HOME=~/Applications/Sireum
          git clone https://github.com/sireum/logika-examples
          logika-examples/bin/verify.cmd
          "${SIREUM_HOME}/bin/sireum" proyek ive logika-examples

  test-windows-amd64-2019:
    needs: [ci-distro-linux-amd64, ci-distro-windows-amd64]
    env:
      SIREUM_V: ${{ github.ref_type == 'tag' && github.ref || 'dev' }}
    runs-on: windows-2019
    steps:
      - name: Test
        shell: cmd
        run: |
          md "%USERPROFILE%\Applications" "%USERPROFILE%\Downloads" 2> nul
          curl -JLso %USERPROFILE%\Downloads\sireum-ive-win-amd64.zip https://github.com/sireum/kekinian/releases/download/%SIREUM_V%/sireum-ive-win-amd64.zip
          curl -JLso %USERPROFILE%\Downloads\org.sireum.library.m2.zip https://github.com/sireum/kekinian/releases/download/%SIREUM_V%/org.sireum.library.m2.zip  
          cd /d %USERPROFILE%\Applications
          tar xf %USERPROFILE%\Downloads\sireum-ive-win-amd64.zip
          cd /d "%USERPROFILE%"
          tar xf %USERPROFILE%\Downloads\org.sireum.library.m2.zip
          set errorlevel=
          set SIREUM_HOME=%USERPROFILE%\Applications\Sireum
          git clone https://github.com/sireum/logika-examples
          call logika-examples\bin\verify.cmd || goto :error
          call "%SIREUM_HOME%\bin\sireum.bat" proyek ive logika-examples || goto :error
          goto :EOF
          :error
          exit /b %errorlevel%

  test-windows-amd64-latest:
    needs: [ci-distro-linux-amd64, ci-distro-windows-amd64]
    env:
      SIREUM_V: ${{ github.ref_type == 'tag' && github.ref || 'dev' }}
    runs-on: windows-latest
    steps:
      - name: Test
        shell: cmd
        run: |
          md "%USERPROFILE%\Applications" "%USERPROFILE%\Downloads" 2> nul
          curl -JLso %USERPROFILE%\Downloads\sireum-ive-win-amd64.zip https://github.com/sireum/kekinian/releases/download/%SIREUM_V%/sireum-ive-win-amd64.zip
          curl -JLso %USERPROFILE%\Downloads\org.sireum.library.m2.zip https://github.com/sireum/kekinian/releases/download/%SIREUM_V%/org.sireum.library.m2.zip  
          cd /d %USERPROFILE%\Applications
          tar xf %USERPROFILE%\Downloads\sireum-ive-win-amd64.zip
          cd /d "%USERPROFILE%"
          tar xf %USERPROFILE%\Downloads\org.sireum.library.m2.zip
          set errorlevel=
          set SIREUM_HOME=%USERPROFILE%\Applications\Sireum
          git clone https://github.com/sireum/logika-examples
          call logika-examples\bin\verify.cmd || goto :error
          call "%SIREUM_HOME%\bin\sireum.bat" proyek ive logika-examples || goto :error
          goto :EOF
          :error
          exit /b %errorlevel%

  test-linux-amd64-20-04:
    needs: ci-distro-linux-amd64
    env:
      SIREUM_V: ${{ github.ref_type == 'tag' && github.ref || 'dev' }}
    runs-on: ubuntu-20.04
    steps:
      - name: Test
        run: |
          mkdir -p ~/Applications ~/Downloads
          curl -JLso ~/Downloads/sireum-ive-linux-amd64.tar.xz https://github.com/sireum/kekinian/releases/download/$SIREUM_V/sireum-ive-linux-amd64.tar.xz
          curl -JLso ~/Downloads/org.sireum.library.m2.zip https://github.com/sireum/kekinian/releases/download/$SIREUM_V/org.sireum.library.m2.zip  
          cd ~/Applications
          tar xf ~/Downloads/sireum-ive-linux-amd64.tar.xz
          cd ~
          unzip -qq ~/Downloads/org.sireum.library.m2.zip
          export SIREUM_HOME=~/Applications/Sireum
          git clone https://github.com/sireum/logika-examples
          logika-examples/bin/verify.cmd
          "${SIREUM_HOME}/bin/sireum" proyek ive logika-examples

  test-linux-amd64-22-04:
    needs: ci-distro-linux-amd64
    env:
      SIREUM_V: ${{ github.ref_type == 'tag' && github.ref || 'dev' }}
    runs-on: ubuntu-22.04
    steps:
      - name: Test
        run: |
          mkdir -p ~/Applications ~/Downloads
          curl -JLso ~/Downloads/sireum-ive-linux-amd64.tar.xz https://github.com/sireum/kekinian/releases/download/$SIREUM_V/sireum-ive-linux-amd64.tar.xz
          curl -JLso ~/Downloads/org.sireum.library.m2.zip https://github.com/sireum/kekinian/releases/download/$SIREUM_V/org.sireum.library.m2.zip  
          cd ~/Applications
          tar xf ~/Downloads/sireum-ive-linux-amd64.tar.xz
          cd ~
          unzip -qq ~/Downloads/org.sireum.library.m2.zip
          export SIREUM_HOME=~/Applications/Sireum
          git clone https://github.com/sireum/logika-examples
          logika-examples/bin/verify.cmd
          "${SIREUM_HOME}/bin/sireum" proyek ive logika-examples
          
  test-linux-amd64-latest:
    needs: ci-distro-linux-amd64
    env:
      SIREUM_V: ${{ github.ref_type == 'tag' && github.ref || 'dev' }}
    runs-on: ubuntu-latest
    steps:
      - name: Test
        run: |
          mkdir -p ~/Applications ~/Downloads
          curl -JLso ~/Downloads/sireum-ive-linux-amd64.tar.xz https://github.com/sireum/kekinian/releases/download/$SIREUM_V/sireum-ive-linux-amd64.tar.xz
          curl -JLso ~/Downloads/org.sireum.library.m2.zip https://github.com/sireum/kekinian/releases/download/$SIREUM_V/org.sireum.library.m2.zip  
          cd ~/Applications
          tar xf ~/Downloads/sireum-ive-linux-amd64.tar.xz
          cd ~
          unzip -qq ~/Downloads/org.sireum.library.m2.zip
          export SIREUM_HOME=~/Applications/Sireum
          git clone https://github.com/sireum/logika-examples
          logika-examples/bin/verify.cmd
          "${SIREUM_HOME}/bin/sireum" proyek ive logika-examples