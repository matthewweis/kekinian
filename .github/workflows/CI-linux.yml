name: Linux

on:
  push:
    branches:
      - "**"
    tags:
      - "!**"

jobs:

  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Clean
        run: |
          rm -fR "$GITHUB_WORKSPACE/Sireum"
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: Sireum
          submodules: recursive
      - name: Cache Java
        id: cache-java
        uses: actions/cache@v3
        with:
          path: Sireum/bin/linux/java
          key: ${{ runner.os }}-${{ hashFiles('Sireum/versions.properties') }}-java
      - name: Cache Scala
        id: cache-scala
        uses: actions/cache@v3
        with:
          path: Sireum/bin/scala
          key: ${{ runner.os }}-${{ hashFiles('Sireum/versions.properties') }}-scala
      - name: Cache Coursier
        id: cache-coursier
        uses: actions/cache@v3
        with:
          path: Sireum/cache/coursier
          key: ${{ runner.os }}-${{ hashFiles('Sireum/versions.properties') }}-coursier
      - name: Cache SMT2 solvers
        id: cache-smt2
        uses: actions/cache@v3
        with:
          path: |
            Sireum/bin/linux/cvc
            Sireum/bin/linux/.cvc.ver
            Sireum/bin/linux/cvc5
            Sireum/bin/linux/.cvc5.ver
            Sireum/bin/linux/z3
          key: ${{ runner.os }}-${{ hashFiles('Sireum/versions.properties') }}-smt2
      - name: Cache OSATE
        id: cache-osate
        uses: actions/cache@v3
        with:
          path: Sireum/bin/linux/osate
          key: ${{ runner.os }}-${{ hashFiles('Sireum/hamr/codegen/jvm/src/main/resources/phantom_versions.properties') }}-osate
      - name: Test
        run: |
          export COURSIER_CACHE=$GITHUB_WORKSPACE/Sireum/cache/coursier
          cd $GITHUB_WORKSPACE/Sireum
          .ci/build.sh && .ci/build.sh test-verify
      - name: Cache Graal
        id: cache-graal
        uses: actions/cache@v3
        with:
          path: Sireum/bin/linux/graal
          key: ${{ runner.os }}-${{ hashFiles('Sireum/bin/install/graal.cmd') }}-graal
      - name: Setup musl and zlib
        run: |
          export MUSL_V=1.2.5
          export ZLIB_V=1.3.1
          curl -sO https://musl.libc.org/releases/musl-$MUSL_V.tar.gz
          curl -sO https://www.zlib.net/zlib-$ZLIB_V.tar.gz
          export MUSL_HOME="$GITHUB_WORKSPACE/musl-toolchain"
          tar -xf musl-$MUSL_V.tar.gz
          pushd musl-$MUSL_V
          ./configure --prefix=$MUSL_HOME
          sudo make && make install
          popd
          ln -s $MUSL_HOME/bin/musl-gcc $MUSL_HOME/bin/x86_64-linux-musl-gcc
          export PATH="$MUSL_HOME/bin:$PATH"
          x86_64-linux-musl-gcc --version
          tar -xf zlib-$ZLIB_V.tar.gz
          pushd zlib-$ZLIB_V
          CC=musl-gcc ./configure --prefix=$MUSL_HOME --static
          make && make install
          popd
          sudo rm -fR musl-$MUSL_V.tar.gz zlib-$ZLIB_V.tar.gz musl-$MUSL_V zlib-$ZLIB_V
      - name: Test Native
        run: |
          export MUSL_HOME="$GITHUB_WORKSPACE/musl-toolchain"
          export PATH="$MUSL_HOME/bin:$PATH"
          export COURSIER_CACHE=$GITHUB_WORKSPACE/Sireum/cache/coursier
          cd $GITHUB_WORKSPACE/Sireum
          .ci/linux-native.sh
          rm bin/linux/sireum
