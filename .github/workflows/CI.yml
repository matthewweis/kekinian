name: CI

on: [push]

jobs:

  build-ubuntu:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[skip action]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2-beta
      - name: Test
        run: |
          cd $GITHUB_WORKSPACE
          git submodule update --init --recursive
          bin/build.cmd test native
          bin/linux/upx -9 bin/linux/sireum

  build-mac:
    runs-on: macOS-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[skip action]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2-beta
      - name: Test
        run: |
          cd $GITHUB_WORKSPACE
          git submodule update --init --recursive
          bin/build.cmd test native
          bin/mac/upx -9 bin/mac/sireum

  build-windows:
    runs-on: windows-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[skip action]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2-beta
      - name: Test
        shell: cmd
        run: | # call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          cd /d %GITHUB_WORKSPACE%
          git submodule update --init --recursive
          bin\build.cmd test

  skip:
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, '[skip ci]') || contains(github.event.head_commit.message, '[skip action]')"
    steps:
      - run: |
          echo Skipped
