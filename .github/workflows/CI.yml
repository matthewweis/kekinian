name: CI

on: [push]

jobs:

  ci-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache Java
        id: cache-java
        uses: actions/cache@v2
        with:
          path: bin/linux/java
          key: ${{ runner.os }}-${{ hashFiles('versions.properties') }}-java
      - name: Cache Z3
        id: cache-z3
        uses: actions/cache@v2
        with:
          path: bin/linux/z3
          key: ${{ runner.os }}-${{ hashFiles('versions.properties') }}-z3
      - name: Cache Scala
        id: cache-scala
        uses: actions/cache@v2
        with:
          path: bin/scala
          key: ${{ runner.os }}-${{ hashFiles('versions.properties') }}-scala
      - name: Cache Coursier
        id: cache-coursier
        uses: actions/cache@v2
        with:
          path: cache/coursier
          key: ${{ runner.os }}-${{ hashFiles('versions.properties') }}-coursier
      - name: Cache Graal
        id: cache-graal
        uses: actions/cache@v2
        with:
          path: bin/linux/graal
          key: ${{ runner.os }}-${{ hashFiles('bin/install/graal.cmd') }}-graal
      - name: Test
        run: |
          export COURSIER_CACHE=$GITHUB_WORKSPACE/cache/coursier
          cd $GITHUB_WORKSPACE
          git submodule update --init --recursive
          .ci/build.sh test
          .ci/linux-native.sh

  ci-mac:
    runs-on: macOS-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache Java
        id: cache-java
        uses: actions/cache@v2
        with:
          path: bin/mac/java
          key: ${{ runner.os }}-${{ hashFiles('versions.properties') }}-java
      - name: Cache Z3
        id: cache-z3
        uses: actions/cache@v2
        with:
          path: bin/mac/z3
          key: ${{ runner.os }}-${{ hashFiles('versions.properties') }}-z3
      - name: Cache Scala
        id: cache-scala
        uses: actions/cache@v2
        with:
          path: bin/scala
          key: ${{ runner.os }}-${{ hashFiles('versions.properties') }}-scala
      - name: Cache Coursier
        id: cache-coursier
        uses: actions/cache@v2
        with:
          path: cache/coursier
          key: ${{ runner.os }}-${{ hashFiles('versions.properties') }}-coursier
      - name: Cache Graal
        id: cache-graal
        uses: actions/cache@v2
        with:
          path: bin/mac/graal
          key: ${{ runner.os }}-${{ hashFiles('bin/install/graal.cmd') }}-graal
      - name: Test
        run: |
          export COURSIER_CACHE=$GITHUB_WORKSPACE/cache/coursier
          cd $GITHUB_WORKSPACE
          git submodule update --init --recursive
          .ci/build.sh test
          .ci/mac-native.sh

  ci-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache Java
        id: cache-java
        uses: actions/cache@v2
        with:
          path: bin\win\java
          key: ${{ runner.os }}-${{ hashFiles('versions.properties') }}-java
      - name: Cache Z3
        id: cache-z3
        uses: actions/cache@v2
        with:
          path: bin\win\z3
          key: ${{ runner.os }}-${{ hashFiles('versions.properties') }}-z3
      - name: Cache Scala
        id: cache-scala
        uses: actions/cache@v2
        with:
          path: bin\scala
          key: ${{ runner.os }}-${{ hashFiles('versions.properties') }}-scala
      - name: Cache Coursier
        id: cache-coursier
        uses: actions/cache@v2
        with:
          path: cache\coursier
          key: ${{ runner.os }}-${{ hashFiles('versions.properties') }}-coursier
      - name: Cache Graal
        id: cache-graal
        uses: actions/cache@v2
        with:
          path: bin\win\graal
          key: ${{ runner.os }}-${{ hashFiles('bin/install/graal.cmd') }}-graal
      - name: Configure Pagefile
        uses: al-cheb/configure-pagefile-action@v1.2
        with:
          minimum-size: 8GB
          maximum-size: 16GB
      - name: Test
        shell: cmd
        run: |
          set COURSIER_CACHE=%GITHUB_WORKSPACE%\cache\coursier
          cd /d %GITHUB_WORKSPACE%
          git submodule update --init --recursive
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          set errorlevel=
          call .ci\build.bat test || goto :error
          call .ci\win-native.bat || goto :error
          goto :EOF
          :error
          exit /b %errorlevel%

  ci-ubuntu-compcert:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache Java
        id: cache-java
        uses: actions/cache@v2
        with:
          path: bin/linux/java
          key: ${{ runner.os }}-${{ hashFiles('versions.properties') }}-compcert-java
      - name: Cache Z3
        id: cache-z3
        uses: actions/cache@v2
        with:
          path: bin/linux/z3
          key: ${{ runner.os }}-${{ hashFiles('versions.properties') }}-compcert-z3
      - name: Cache Scala
        id: cache-scala
        uses: actions/cache@v2
        with:
          path: bin/scala
          key: ${{ runner.os }}-${{ hashFiles('versions.properties') }}-compcert-scala
      - name: Cache Coursier
        id: cache-coursier
        uses: actions/cache@v2
        with:
          path: cache/coursier
          key: ${{ runner.os }}-${{ hashFiles('versions.properties') }}-compcert-coursier
      - name: Cache CompCert
        id: cache-compcert
        uses: actions/cache@v2
        with:
          path: |
            bin/linux/.opam
            bin/linux/opam
            bin/linux/.compcert.ver
          key: ${{ runner.os }}-${{ hashFiles('bin/install/compcert.cmd') }}-compcert
      - name: Test
        run: |
          export COURSIER_CACHE=$GITHUB_WORKSPACE/cache/coursier
          cd $GITHUB_WORKSPACE
          git submodule update --init --recursive
          .ci/linux-compcert.sh
